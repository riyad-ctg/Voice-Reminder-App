package reminderapp.view;

import java.awt.Dimension;
import java.awt.Toolkit;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;
import reminderapp.service.SetAlarm;

/**
 * JDialog to show properties of a reminder.
 * showTheDialog() is the only method that should be called.
 * Remember its static.
 * @author Riyad
 */
public class JDialogReminderProperties extends javax.swing.JDialog {
    private final DateTimeFormatter formatter = DateTimeFormat.forPattern("dd/MMM/yyyy hh:mm a");
    /**
     * Creates new form JDialogReminderProperties
     */
    private JDialogReminderProperties(java.awt.Frame parent, boolean modal,int x,int y,SetAlarm alm) {
        super(parent, modal);
        initComponents();
        //Setting up the dialog on the perfect location
        setOnPerfectLocation(x,y);
        jLabelAbout.setText(jLabelAbout.getText()+alm.getAbout());
        jLabelTime.setText(jLabelTime.getText() + alm.getTime().toString(formatter));
        jLabelLoopTime.setText(jLabelLoopTime.getText()+alm.getLoopTime());
        jLabelAudio.setText(jLabelAudio.getText()+alm.isExistAudio);
    }
    
    private void setOnPerfectLocation(int x,int y){
        //This method does show the dialog frame into a perfect location
        //x,y is points where user mouse clicked
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        x-=this.getWidth()/2;
        y-=this.getHeight()/2;
        //We should'nt show the frame outside of screen
        //That's bad looking
        //So we trying to moving into screen
        if(x < 0)
            this.setLocation(0,y);
        else if(x+this.getWidth() > screenSize.width){
            this.setLocation(screenSize.width-this.getWidth(), y);
        }else{
            this.setLocation(x, y);
        }
        
        if(y < 0)
            this.setLocation(this.getX(),0);
        else if((y+this.getHeight()) > screenSize.height){
            this.setLocation(this.getX(),screenSize.height-this.getHeight());
        }else{
            this.setLocation(this.getX(), y);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonClose = new javax.swing.JButton();
        jLabelAboutHeadline = new javax.swing.JLabel();
        jLabelAbout = new javax.swing.JLabel();
        jLabelTimeHeadline = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        jLabelLoopTime = new javax.swing.JLabel();
        jLabelAudio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Reninder Properties");
        setIconImage(null);
        setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        setResizable(false);

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jLabelAboutHeadline.setBackground(new java.awt.Color(204, 204, 204));
        jLabelAboutHeadline.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabelAboutHeadline.setForeground(new java.awt.Color(0, 0, 204));
        jLabelAboutHeadline.setText("Reminder About:");

        jLabelAbout.setBackground(new java.awt.Color(204, 204, 204));
        jLabelAbout.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabelAbout.setForeground(new java.awt.Color(0, 0, 204));

        jLabelTimeHeadline.setBackground(new java.awt.Color(204, 204, 204));
        jLabelTimeHeadline.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabelTimeHeadline.setForeground(new java.awt.Color(0, 0, 204));
        jLabelTimeHeadline.setText("Time:");

        jLabelTime.setBackground(new java.awt.Color(204, 204, 204));
        jLabelTime.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabelTime.setForeground(new java.awt.Color(0, 0, 204));

        jLabelLoopTime.setBackground(new java.awt.Color(204, 204, 204));
        jLabelLoopTime.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabelLoopTime.setForeground(new java.awt.Color(0, 0, 204));
        jLabelLoopTime.setText("Looptime:");

        jLabelAudio.setBackground(new java.awt.Color(204, 204, 204));
        jLabelAudio.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabelAudio.setForeground(new java.awt.Color(0, 0, 204));
        jLabelAudio.setText("Audio:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelAboutHeadline)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelAbout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTimeHeadline)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jButtonClose, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelLoopTime)))
                        .addGap(0, 84, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAudio)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAboutHeadline, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelAbout, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTimeHeadline, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelLoopTime, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelAudio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(jButtonClose, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        //When close button clicked
        this.dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed

    /**
     * To show the dialog
     * @param parent Parent Frame of the dialog
     * @param x is the x axis of where mouse is clicked
     * @param y is the y axis of where mouse is clicked
     * @param alm To got properties of a reminder.
     */
    public static void showTheDialog(java.awt.Frame parent,int x,int y,SetAlarm alm) {
        //Showing the frame look and feel nimbus
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogReminderProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(() -> {
            JDialogReminderProperties dialog = new JDialogReminderProperties(parent, true, x, y,alm);
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JLabel jLabelAbout;
    private javax.swing.JLabel jLabelAboutHeadline;
    private javax.swing.JLabel jLabelAudio;
    private javax.swing.JLabel jLabelLoopTime;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JLabel jLabelTimeHeadline;
    // End of variables declaration//GEN-END:variables
}
